---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: back2back-controller
  labels:
    app: back2back-controller
automountServiceAccountToken: true
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: back2back-controller
rules:
- apiGroups: [b2b.moreiradj.fr]
  resources: [b2bbackups, b2bbackups/status, b2bbackups/finalizers]
  verbs: [get, list, watch, patch, update]
- apiGroups: [batch]
  resources: [jobs, cronjobs]
  verbs: [create, delete, get, list, watch]
- apiGroups: [events.k8s.io]
  resources: [events]
  verbs: [create]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: back2back-controller
subjects:
- kind: ServiceAccount
  name: back2back-controller
roleRef:
  kind: ClusterRole
  name: back2back-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: back2back-controller
  labels:
    app: back2back-controller
    app.kubernetes.io/name: back2back-controller
    app.kubernetes.io/instance: back2back-controller
spec:
  selector:
    matchLabels:
      app: back2back-controller
  template:
    metadata:
      labels:
        app: back2back-controller
    spec:
      serviceAccountName: back2back-controller
      containers:
      - name: back2back-controller
        image: mmoreiradj/back2back-controller
        env:
        - name: SERVER_PORT
          value: '8080'
        - name: SERVER_HOST
          value: 0.0.0.0
        resources:
          limits:
            memory: 128Mi
            cpu: 500m
          requests:
            memory: 64Mi
            cpu: 250m
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: back2back-controller
  labels:
    app: back2back-controller
    app.kubernetes.io/name: back2back-controller
    app.kubernetes.io/instance: back2back-controller
spec:
  type: ClusterIP
  selector:
    app: back2back-controller
  ports:
  - port: 80
    name: http
    protocol: TCP
    targetPort: 8080
